<?php

/**
 * @file
 * Uploads a zip file of images on Amazon S3.
 */
use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Implements hook_help().
 */
function s3_zip_image_upload_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {

    case 'help.page.s3_zip_image_upload':
      $output = '';
      $output .= '<h3>' . t('Introduction') . '</h3>';
      $output .= '<p>' . t('S3 Image Upload module allows to upload a zip file of images on Amazon S3.');
      $output .= '<h3>' . t('Requirements') . '</h3>';
      $output .= '<h4>' . t('amazon s3 php class library') . '</h4>';
      $output .= t('You will need to download amazon s3 php class from the site <a href="https://github.com/tpyo/amazon-s3-php-class" target= "_blank"> https://github.com/tpyo/amazon-s3-php-class</a>. Extract the amazon-s3-php-class files to the "/sites/all/libraries/" directory.).');
      $output .= t('You can download this module using drush command "drush dl s3_zip_image_upload" after that do "drush en s3_zip_image_upload" it will download the amazon-s3-php-class library as well automatically');
      $output .= '<h3>' . t('Installation / Configuration') . '</h4>';
      $output .= '1. Extract the module files to the "/modules" directory. It should now
        contain a "s3 zip image upload" directory.<br/>';
      $output .= '2. Enable the module in the "Administration panel > Modules > Multilingual - Internationalization" section.<br/>';
      $output .= '3. User System Configuration enter the folder name where images will extracted on Amazon S3 and Save.<br/>';
      return $output;
  }
}

/**
 * Implements hook_libraries_info().
 *
 * Defines external library for module.
 */
function s3_zip_image_upload_libraries_info() {
  $libraries['amazon-s3-php-class'] = [
    'name' => 'Amazon S3 php class',
    'vendor url' => 'https://github.com/tpyo/amazon-s3-php-class',
    'download url' => 'https://github.com/tpyo/amazon-s3-php-class/archive/master.zip',
    'version callback' => 's3_zip_image_upload_version_callback',
    'files' => [
      'php' => [
        'S3.php',
      ],
    ],
  ];

  return $libraries;
}

/**
 * Callback for version of library.
 *
 * @return boolean.
 *    Returns true.
 */
function s3_zip_image_upload_version_callback() {
  return TRUE;
}
